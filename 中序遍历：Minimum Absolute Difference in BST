/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
/*思路：利用BST树的性质，中序遍历为一个从小到大的有序数组，让后面那个减去前面那个为差值，然后找最小的差值*/
    void inorder(TreeNode* root, int &pre , int& minl){//
        if(!root) return ;
        inorder(root->left,pre,minl);
        if(pre == -1){
            pre = root->val;
        }
        else{
            minl = min(root->val-pre, minl);
            pre = root->val;
        }
        inorder(root->right,pre,minl);
    }
    int getMinimumDifference(TreeNode* root) {
        int minl=INT_MAX, pre = -1;
        inorder(root, pre, minl);
        return minl;
    }
};
